name: CD AWS

on: # 아래의 조건을 만족할때 실행
  pull_request_target: # pull_request 가 승인되었을때
    types:
      - closed

jobs:
  build:
    # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#running-your-pull_request_target-workflow-when-a-pull-request-merges
    # pull_request 가 승인된 상황에만 아래를 실행하기 위해, github.event.pull_request.merged 가 true 인지 체크.
    if: (github.event.pull_request.merged)

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout server
        uses: actions/checkout@v4

      - name: Checkout submodule
        uses: actions/checkout@v4
        with:
          token: '${{ secrets.SUBMODULE_PAT }}'
          repository: 'capstone-shop/${{ secrets.SUBMODULE_REPOSITORY_NAME }}'
          path: resources/settings

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Admin Image Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: 'docker/Dockerfile-admin'
          tags: ${{ secrets.DOCKER_REGISTRY }}/admin-image:latest

      - name: User Image Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: 'docker/Dockerfile-user'
          tags: ${{ secrets.DOCKER_REGISTRY }}/user-image:latest

        # 서버에 ssh 로 접속해서
        # 0. docker-compose.yml 파일이 있는 위치로 이동하고
        # 1. 서버 끄고
        # 2. 서버 실행
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SSH_SERVER }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd backend
            docker-compose down
            docker-compose up -d