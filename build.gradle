subprojects {
	group = 'com.capstone'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'java'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		// Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// Testing
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

//https://docs.gradle.org/current/userguide/more_about_tasks.html
def copyResourcesToAdminModule = tasks.register('copyResourcesToAdminModule', Copy) {
	from('resources')
	into('module-admin/src/main/resources')
}
def copyResourcesToUserModule = tasks.register('copyResourcesToUserModule', Copy) {
	from('resources')
	into('module-user/src/main/resources')
}
def copyResourcesToCoreModule = tasks.register('copyResourcesToCoreModule', Copy) {
	from('resources')
	into('module-core/src/main/resources')
}

project(':module-admin') {
	dependencies {
		implementation project(':module-core')
	}

	tasks.named('processResources').configure {
		dependsOn(copyResourcesToAdminModule)
	}
}

project(':module-user') {
	dependencies {
		implementation project(':module-core')
	}

	tasks.named('processResources').configure {
		dependsOn(copyResourcesToUserModule)
	}
}

project(':module-core') {
	tasks.named('processResources').configure {
		dependsOn(copyResourcesToCoreModule)
	}
}

